{
  "hash": "9c9d0fe0dcb49ac3101183da50285a91",
  "result": {
    "engine": "knitr",
    "markdown": "# Tidy data {#sec-tidy}\n\n\n\n\n\n\n\n\n\n\nWe are going to learn how to organise data using the *tidy* format. This is because we are using the `tidyverse` packages @R-tidyverse. This is an opinionated, but highly effective method for generating reproducible analyses with a wide-range of data manipulation tools. Tidy data is an easy format for computers to read. It is also the required data structure for our **statistical tests** that we will work with later.\n\nHere 'tidy' refers to a specific structure that lets us manipulate and visualise data with ease. In a tidy dataset each *variable* is in one column and each row contains one *observation*. Each cell of the table/spreadsheet contains the *values*. One observation you might make about tidy data is it is quite long - it generates a lot of rows of data - you might remember then that *tidy* data can be referred to as *long*-format data (as opposed to *wide* data). \n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/tidy-1.png){fig-align='center' fig-alt='tidy data overview' width=80%}\n:::\n:::\n\n\n\n\n\n## Why tidy data?\n\n- The data cleaning and analysis tools in R work best with data that is \"tidy\"\n\n- \"Tidy\" data has a clear and consistent structure, untidy data can be \"messy\" in lots of different ways\n\n\n## Using `pivot` functions\n\nWhat do we do if the data we are working with in R isn't \"tidy\"?\n\nThere are functions found as part of the `tidyverse` that can help us to reshape data. \n\n* `tidyr::pivot_wider()` - from *long* to *wide* format\n\n* `tidyr::pivot_longer()` - from *wide* to *long* format\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Reshaping data with pivot](images/tidyr-longer-wider.gif){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n country <- c(\"x\", \"y\", \"z\")\n yr1960 <-  c(10, 20, 30)\n yr1970 <-  c(13, 23, 33)\n yr2010 <-  c(15, 25, 35)\n\ncountry_data <- tibble(country, yr1960, yr1970, yr2010)\ncountry_data\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|country | yr1960| yr1970| yr2010|\n|:-------|------:|------:|------:|\n|x       |     10|     13|     15|\n|y       |     20|     23|     25|\n|z       |     30|     33|     35|\n\n</div>\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npivot_longer(data = country_data,\n             cols = yr1960:yr2010,\n             names_to = \"year\",\n             names_prefix = \"yr\",\n             values_to = \"metric\")\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Reshaping data with pivot](images/tidyr_pivot.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n\n\nTo *save* these changes to your data format, you must assign this to an object, and you have two options\n\n* Use the same name as the original R object, this will *overwrite* the original with the new format\n\n* Use a *new* name for the reformatted data both R objects will exist in your Environment\n\nNeither is more *correct* than the other but be aware of what you are doing.\n\n\n### Overwrite the original object \n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncountry_data <- pivot_longer(data = country_data,\n             cols = yr1960:yr2010,\n             names_to = \"year\",\n             names_prefix = \"yr\",\n             values_to = \"metric\")\n```\n:::\n\n\n\n\n### Create a new r object\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlong_country_data <- pivot_longer(data = country_data,\n             cols = yr1960:yr2010,\n             names_to = \"year\",\n             names_prefix = \"yr\",\n             values_to = \"metric\")\n```\n:::\n\n\n\n\n## Reading\n\n- [Tidy data](https://vita.had.co.nz/papers/tidy-data.pdf)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}